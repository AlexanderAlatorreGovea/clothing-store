{"ast":null,"code":"var _jsxFileName = \"/Users/test/clotingstore/src/pages/Shop/Shop.js\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverviewContainer from '../../components/CollectionsOverview/CollectionsOverviewContainer';\nimport CollectionPageContainer from '../Collection/CollectionPageContainer';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop-actions';\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop-selectors';\nconst CollectionPageWithSpinner = WithSpinner(Collection);\n\nclass Shop extends Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const fetchCollectionsStartAsync = this.props.fetchCollectionsStartAsync;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionLoaded = _this$props.isCollectionLoaded;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: CollectionsOverviewContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      component: CollectionPageContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Shop);","map":{"version":3,"sources":["/Users/test/clotingstore/src/pages/Shop/Shop.js"],"names":["React","Component","Route","connect","CollectionsOverviewContainer","CollectionPageContainer","fetchCollectionsStartAsync","selectIsCollectionsLoaded","CollectionPageWithSpinner","WithSpinner","Collection","Shop","unsubscribeFromSnapshot","componentDidMount","props","render","match","isCollectionLoaded","path","mapStateToProps","createStructuredSelector","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,4BAAP,MAAyC,mEAAzC;AACA,OAAOC,uBAAP,MAAoC,uCAApC;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,yBAAT,QAA0C,iCAA1C;AAGA,MAAMC,yBAAyB,GAAGC,WAAW,CAACC,UAAD,CAA7C;;AAEA,MAAMC,IAAN,SAAmBV,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAEzBW,uBAFyB,GAEC,IAFD;AAAA;;AAIzBC,EAAAA,iBAAiB,GAAG;AAAA,UACRP,0BADQ,GACuB,KAAKQ,KAD5B,CACRR,0BADQ;AAGhBA,IAAAA,0BAA0B;AAC7B;;AAEDS,EAAAA,MAAM,GAAG;AAAA,wBACiC,KAAKD,KADtC;AAAA,UACGE,KADH,eACGA,KADH;AAAA,UACUC,kBADV,eACUA,kBADV;AAEL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AACI,MAAA,KAAK,MADT;AAEI,MAAA,IAAI,YAAKD,KAAK,CAACE,IAAX,CAFR;AAGI,MAAA,SAAS,EAAEd,4BAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI,oBAAC,KAAD;AACI,MAAA,IAAI,YAAKY,KAAK,CAACE,IAAX,mBADR;AAEI,MAAA,SAAS,EAAEb,uBAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ;AAaH;;AAzBwB;;AA4B7B,MAAMc,eAAe,GAAGC,wBAAwB,CAAC;AAC7CH,EAAAA,kBAAkB,EAAEV;AADyB,CAAD,CAAhD;;AAIA,MAAMc,kBAAkB,GAAGC,QAAQ,KAAK;AACpChB,EAAAA,0BAA0B,EAAE,MAAMgB,QAAQ,CAAChB,0BAA0B,EAA3B;AADN,CAAL,CAAnC;;AAKA,eAAeH,OAAO,CAClBgB,eADkB,EAElBE,kBAFkB,CAAP,CAGbV,IAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CollectionsOverviewContainer from '../../components/CollectionsOverview/CollectionsOverviewContainer';\nimport CollectionPageContainer from '../Collection/CollectionPageContainer';\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop-actions';\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop-selectors';\n\n\nconst CollectionPageWithSpinner = WithSpinner(Collection);\n\nclass Shop extends Component {\n\n    unsubscribeFromSnapshot = null;\n\n    componentDidMount() {\n        const { fetchCollectionsStartAsync } = this.props;\n    \n        fetchCollectionsStartAsync();\n    }\n\n    render() {\n        const { match, isCollectionLoaded } = this.props;\n        return (\n            <div className=\"shop-page\">\n                <Route\n                    exact\n                    path={`${match.path}`}\n                    component={CollectionsOverviewContainer}\n                />\n                <Route\n                    path={`${match.path}/:collectionId`}\n                    component={CollectionPageContainer}\n                />\n            </div>\n        )\n    }\n}   \n\nconst mapStateToProps = createStructuredSelector({\n    isCollectionLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Shop);\n\n\n"]},"metadata":{},"sourceType":"module"}