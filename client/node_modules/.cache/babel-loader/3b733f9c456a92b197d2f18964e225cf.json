{"ast":null,"code":"var _jsxFileName = \"/Users/test/clotingstore/src/pages/Shop/Shop.js\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport CollectionsOverview from '../../components/CollectionsOverview/CollectionsOverview';\nimport Collection from '../Collection/Collection.js';\nimport WithSpinner from '../../components/Spinner/Spinner';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop-actions';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop-selectors';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(Collection);\n\nclass Shop extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const etchCollectionsStartAsync = this.props.etchCollectionsStartAsync;\n    etchCollectionsStartAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionFetching = _this$props.isCollectionFetching;\n    const loading = this.state.loading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  isCollectionFetching: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(null, mapDispatchToProps)(Shop);","map":{"version":3,"sources":["/Users/test/clotingstore/src/pages/Shop/Shop.js"],"names":["React","Component","Route","connect","createStructuredSelector","CollectionsOverview","Collection","WithSpinner","fetchCollectionsStartAsync","selectIsCollectionFetching","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","Shop","state","loading","unsubscribeFromSnapshot","componentDidMount","etchCollectionsStartAsync","props","render","match","isCollectionFetching","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,mBAAP,MAAgC,0DAAhC;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,0BAAT,QAA2C,iCAA3C;AAGA,MAAMC,8BAA8B,GAAGH,WAAW,CAACF,mBAAD,CAAlD;AACA,MAAMM,yBAAyB,GAAGJ,WAAW,CAACD,UAAD,CAA7C;;AAEA,MAAMM,IAAN,SAAmBX,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzBY,KADyB,GACjB;AACJC,MAAAA,OAAO,EAAE;AADL,KADiB;AAAA,SAKzBC,uBALyB,GAKC,IALD;AAAA;;AAOzBC,EAAAA,iBAAiB,GAAG;AAAA,UACRC,yBADQ,GACsB,KAAKC,KAD3B,CACRD,yBADQ;AAGhBA,IAAAA,yBAAyB;AAC5B;;AAEDE,EAAAA,MAAM,GAAG;AAAA,wBACmC,KAAKD,KADxC;AAAA,UACGE,KADH,eACGA,KADH;AAAA,UACUC,oBADV,eACUA,oBADV;AAAA,UAEGP,OAFH,GAEe,KAAKD,KAFpB,CAEGC,OAFH;AAGL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AACI,MAAA,KAAK,MADT;AAEI,MAAA,IAAI,YAAKM,KAAK,CAACE,IAAX,CAFR;AAGI,MAAA,MAAM,EAAEJ,KAAK,IACT,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEJ;AAA3C,SAAwDI,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQI,oBAAC,KAAD;AACI,MAAA,IAAI,YAAKE,KAAK,CAACE,IAAX,mBADR;AAEI,MAAA,MAAM,EAAEJ,KAAK,IACT,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEJ;AAAtC,SAAmDI,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CADJ;AAiBH;;AAjCwB;;AAoC7B,MAAMK,eAAe,GAAGnB,wBAAwB,CAAC;AAC7CiB,EAAAA,oBAAoB,EAAEZ;AADuB,CAAD,CAAhD;;AAIA,MAAMe,kBAAkB,GAAGC,QAAQ,KAAK;AACpCJ,EAAAA,oBAAoB,EAAE,MAAMI,QAAQ,CAACjB,0BAA0B,EAA3B;AADA,CAAL,CAAnC;;AAKA,eAAeL,OAAO,CAClB,IADkB,EAElBqB,kBAFkB,CAAP,CAGbZ,IAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport CollectionsOverview from '../../components/CollectionsOverview/CollectionsOverview';\nimport Collection from '../Collection/Collection.js';\nimport WithSpinner from '../../components/Spinner/Spinner'\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop-actions';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop-selectors';\n\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(Collection);\n\nclass Shop extends Component {\n    state = {\n        loading: true\n    };\n\n    unsubscribeFromSnapshot = null;\n\n    componentDidMount() {\n        const { etchCollectionsStartAsync } = this.props;\n    \n        etchCollectionsStartAsync();\n    }\n\n    render() {\n        const { match, isCollectionFetching } = this.props;\n        const { loading } = this.state;\n        return (\n            <div className=\"shop-page\">\n                <Route\n                    exact\n                    path={`${match.path}`}\n                    render={props => (\n                        <CollectionsOverviewWithSpinner isLoading={loading} {...props} />\n                    )}\n                />\n                <Route\n                    path={`${match.path}/:collectionId`}\n                    render={props => (\n                        <CollectionPageWithSpinner isLoading={loading} {...props} />\n                    )}\n                />\n            </div>\n        )\n    }\n}   \n\nconst mapStateToProps = createStructuredSelector({\n    isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n    isCollectionFetching: () => dispatch(fetchCollectionsStartAsync())\n});\n\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(Shop);\n\n\n"]},"metadata":{},"sourceType":"module"}