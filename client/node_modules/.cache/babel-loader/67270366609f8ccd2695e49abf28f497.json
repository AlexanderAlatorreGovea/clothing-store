{"ast":null,"code":"var _jsxFileName = \"/Users/test/clotingstore/src/pages/Shop/Shop.js\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/CollectionsOverview/CollectionsOverview';\nimport Collection from '../Collection/Collection.js';\nimport { updateCollections } from '../../redux/shop/shop-actions';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nclass Shop extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: CollectionsOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      component: Collection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(Shop);","map":{"version":3,"sources":["/Users/test/clotingstore/src/pages/Shop/Shop.js"],"names":["React","Component","Route","connect","CollectionsOverview","Collection","updateCollections","firestore","convertCollectionsSnapshotToMap","Shop","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","get","then","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,0DAAhC;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;;AAEA,MAAMC,IAAN,SAAmBR,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzBS,KADyB,GACjB;AACJC,MAAAA,OAAO,EAAE;AADL,KADiB;AAAA,SAKzBC,uBALyB,GAKC,IALD;AAAA;;AAOzBC,EAAAA,iBAAiB,GAAG;AAAA,UACZP,iBADY,GACU,KAAKQ,KADf,CACZR,iBADY;AAEpB,UAAMS,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC,YAAMC,cAAc,GAAGZ,+BAA+B,CAACW,QAAD,CAAtD;AACAb,MAAAA,iBAAiB,CAACc,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAEV,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KAJD;AAKC;;AAEDW,EAAAA,MAAM,GAAG;AAAA,UACGC,KADH,GACa,KAAKT,KADlB,CACGS,KADH;AAEL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKA,KAAK,CAACC,IAAX,CAAjB;AAAoC,MAAA,SAAS,EAAGpB,mBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKmB,KAAK,CAACC,IAAX,mBAAX;AAA4C,MAAA,SAAS,EAAGnB,UAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AA1BwB;;AA6B7B,MAAMoB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCpB,EAAAA,iBAAiB,EAAEc,cAAc,IACjCM,QAAQ,CAACpB,iBAAiB,CAACc,cAAD,CAAlB;AAF4B,CAAL,CAAnC;;AAKA,eAAejB,OAAO,CAClB,IADkB,EAElBsB,kBAFkB,CAAP,CAGbhB,IAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CollectionsOverview from '../../components/CollectionsOverview/CollectionsOverview';\nimport Collection from '../Collection/Collection.js';\n\nimport { updateCollections } from '../../redux/shop/shop-actions';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nclass Shop extends Component {\n    state = {\n        loading: true\n    };\n\n    unsubscribeFromSnapshot = null;\n\n    componentDidMount() {\n    const { updateCollections } = this.props;\n    const collectionRef = firestore.collection('collections');\n\n    collectionRef.get().then(snapshot => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        updateCollections(collectionsMap);\n        this.setState({ loading: false });\n    });\n    }\n\n    render() {\n        const { match } = this.props\n        return (\n            <div className=\"shop-page\">\n                <Route exact path={`${match.path}`} component={ CollectionsOverview } />\n                <Route path={`${match.path}/:collectionId`} component={ Collection } />\n            </div>\n        )\n    }\n}   \n\nconst mapDispatchToProps = dispatch => ({\n    updateCollections: collectionsMap =>\n    dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(Shop);\n\n\n"]},"metadata":{},"sourceType":"module"}