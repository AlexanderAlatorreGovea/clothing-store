{"ast":null,"code":"var _jsxFileName = \"/Users/test/clotingstore/src/pages/Shop/Shop.js\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport CollectionsOverviewContainer from '../../components/CollectionsOverview/CollectionsOverviewContainer';\nimport Collection from '../Collection/Collection.js';\nimport WithSpinner from '../../components/Spinner/Spinner';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop-actions';\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop-selectors'; //const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n\nconst CollectionPageWithSpinner = WithSpinner(Collection);\n\nclass Shop extends Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const fetchCollectionsStartAsync = this.props.fetchCollectionsStartAsync;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionLoaded = _this$props.isCollectionLoaded;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: CollectionsOverviewContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionLoaded\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Shop);","map":{"version":3,"sources":["/Users/test/clotingstore/src/pages/Shop/Shop.js"],"names":["React","Component","Route","connect","createStructuredSelector","CollectionsOverviewContainer","Collection","WithSpinner","fetchCollectionsStartAsync","selectIsCollectionFetching","selectIsCollectionsLoaded","CollectionPageWithSpinner","Shop","unsubscribeFromSnapshot","componentDidMount","props","render","match","isCollectionLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,4BAAP,MAAyC,mEAAzC;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SACIC,0BADJ,EAEIC,yBAFJ,QAGO,iCAHP,C,CAMA;;AACA,MAAMC,yBAAyB,GAAGJ,WAAW,CAACD,UAAD,CAA7C;;AAEA,MAAMM,IAAN,SAAmBX,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAEzBY,uBAFyB,GAEC,IAFD;AAAA;;AAIzBC,EAAAA,iBAAiB,GAAG;AAAA,UACRN,0BADQ,GACuB,KAAKO,KAD5B,CACRP,0BADQ;AAGhBA,IAAAA,0BAA0B;AAC7B;;AAEDQ,EAAAA,MAAM,GAAG;AAAA,wBACiC,KAAKD,KADtC;AAAA,UACGE,KADH,eACGA,KADH;AAAA,UACUC,kBADV,eACUA,kBADV;AAEL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AACI,MAAA,KAAK,MADT;AAEI,MAAA,IAAI,YAAKD,KAAK,CAACE,IAAX,CAFR;AAGI,MAAA,SAAS,EAAEd,4BAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI,oBAAC,KAAD;AACI,MAAA,IAAI,YAAKY,KAAK,CAACE,IAAX,mBADR;AAEI,MAAA,MAAM,EAAEJ,KAAK,IACT,oBAAC,yBAAD;AACI,QAAA,SAAS,EAAE,CAACG;AADhB,SAEQH,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ;AAkBH;;AA9BwB;;AAiC7B,MAAMK,eAAe,GAAGhB,wBAAwB,CAAC;AAC7Cc,EAAAA,kBAAkB,EAAER;AADyB,CAAD,CAAhD;;AAIA,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACpCd,EAAAA,0BAA0B,EAAE,MAAMc,QAAQ,CAACd,0BAA0B,EAA3B;AADN,CAAL,CAAnC;;AAKA,eAAeL,OAAO,CAClBiB,eADkB,EAElBC,kBAFkB,CAAP,CAGbT,IAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport CollectionsOverviewContainer from '../../components/CollectionsOverview/CollectionsOverviewContainer';\nimport Collection from '../Collection/Collection.js';\nimport WithSpinner from '../../components/Spinner/Spinner'\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop-actions';\nimport { \n    selectIsCollectionFetching, \n    selectIsCollectionsLoaded \n} from '../../redux/shop/shop-selectors';\n\n\n//const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(Collection);\n\nclass Shop extends Component {\n\n    unsubscribeFromSnapshot = null;\n\n    componentDidMount() {\n        const { fetchCollectionsStartAsync } = this.props;\n    \n        fetchCollectionsStartAsync();\n    }\n\n    render() {\n        const { match, isCollectionLoaded } = this.props;\n        return (\n            <div className=\"shop-page\">\n                <Route\n                    exact\n                    path={`${match.path}`}\n                    component={CollectionsOverviewContainer}\n                />\n                <Route\n                    path={`${match.path}/:collectionId`}\n                    render={props => (\n                        <CollectionPageWithSpinner \n                            isLoading={!isCollectionLoaded} \n                            {...props} \n                        />\n                    )}\n                />\n            </div>\n        )\n    }\n}   \n\nconst mapStateToProps = createStructuredSelector({\n    isCollectionLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Shop);\n\n\n"]},"metadata":{},"sourceType":"module"}